/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
"use client";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const LaptopModel = React.memo(function LaptopModel(props) {
  const modelRef = useRef();
  
  try {
    const { scene } = useGLTF("/models/laptop-transformed.glb");
    
    useFrame((state) => {
      if (modelRef.current) {
        // More subtle floating animation with slower speed
        modelRef.current.position.y = 0 + Math.sin(state.clock.elapsedTime * 0.5) * 0.05;
        // Slower rotation
        modelRef.current.rotation.y += 0.002;
      }
    });

    return (
      <primitive
        ref={modelRef}
        object={scene}
        position={[0, 0, 0]}
        scale={[0.002, 0.002, 0.002]}
        rotation={[0, 0, 0]}
        {...props}
      />
    );
  } catch (error) {
    console.error("Error loading laptop model:", error);
    return null;
  }
});

export default LaptopModel;
useGLTF.preload("/models/laptop-transformed.glb"); 